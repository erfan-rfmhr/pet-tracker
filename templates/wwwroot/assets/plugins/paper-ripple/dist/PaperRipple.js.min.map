/*
 * This file/code is part of Paper UI project.
 *
 * Paper UI - is a modern front-end framework based on Material Design by Google
 * https://github.com/virtyaluk/paper-ui
 *
 * Copyright (c) 2015 Bohdan Shtepan
 * http://modern-dev.com/
 *
 * Licensed under the MIT license.
 */
 {"version":3,"sources":["PaperRipple.js"],"names":["global","factory","define","amd","exports","module","mod","PaperRipple","this","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","ElementRect","element","_element","width","boundingRect","height","size","Math","max","value","_ref","_ref$x","x","undefined","_ref$y","y","euclideanDistance","_ref2","clientX","clientY","l","left","t","top","w","h","_x","_y","get","getBoundingClientRect","point1","point2","sqrt","pow","_window","window","_doc","document","_now","performance","now","bind","Date","PaperWave","_ref3","$","_ref3$recenters","recenters","_ref3$center","center","_ref3$initialOpacity","initialOpacity","_ref3$opacityDecayVel","opacityDecayVelocity","color","getComputedStyle","containerRect","$wave","createElement","classList","add","style","backgroundColor","appendChild","resetDefaults","maxRadius","touchDownStarted","touchUpStarted","startPosition","endPosition","cssString","scaleFactor","radius","containerCenter","currentPos","currentPosition","deltaPos","opacity","webkitTransform","mozTransform","msTransform","oTransform","transform","event","arguments","distanceToFarthestCorner","isTouchDown","parentNode","removeChild","elapsed","touchUpElapsed","touchDownElapsed","touchDownElapsedSeconds","touchUpElapsedSeconds","min","MAX_RADIUS","currentTime","mouseInteractionSeconds","actualRadius","abs","isWaveFullyOpaque","isMaxRadiusReached","translateFraction","translationFraction","cfg","_ref4","_ref4$initialOpacity","_ref4$opacityDecayVel","_ref4$recenters","_ref4$center","_ref4$round","round","_ref4$target","_waves","_initTarget","nodeType","$background","querySelector","$waves","wave","push","ev","addWave","downAction","animate","forEach","upAction","waveIndex","indexOf","splice","remove","draw","outerOpacity","removeWave","shouldKeepAnimating","requestAnimationFrame","hasAttribute","set","newValue","contains","toggle","some","isAnimationComplete"],"mappings":"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","file":"PaperRipple.js","sourcesContent":["/*\n * This file/code is part of Paper UI project.\n *\n * Paper UI - is a modern front-end framework based on Material Design by Google\n * https://github.com/virtyaluk/paper-ui\n *\n * Copyright (c) 2015 Bohdan Shtepan\n * http://modern-dev.com/\n *\n * Licensed under the MIT license.\n */\n 'use strict';\n\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define('PaperRipple', ['module'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(module);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod);\n        global.PaperRipple = mod.exports;\n    }\n})(this, function (module) {\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = (function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    })();\n\n    var ElementRect = (function () {\n        function ElementRect(element) {\n            _classCallCheck(this, ElementRect);\n\n            this._element = element;\n            this.width = this.boundingRect.width;\n            this.height = this.boundingRect.height;\n            this.size = Math.max(this.width, this.height);\n            return this;\n        }\n\n        _createClass(ElementRect, [{\n            key: 'distanceToFarthestCorner',\n            value: function distanceToFarthestCorner(_ref) {\n                var _ref$x = _ref.x;\n                var x = _ref$x === undefined ? 0 : _ref$x;\n                var _ref$y = _ref.y;\n                var y = _ref$y === undefined ? 0 : _ref$y;\n                return Math.max(ElementRect.euclideanDistance({\n                    x: x,\n                    y: y\n                }, {\n                    x: 0,\n                    y: 0\n                }), ElementRect.euclideanDistance({\n                    x: x,\n                    y: y\n                }, {\n                    x: this.width,\n                    y: 0\n                }), ElementRect.euclideanDistance({\n                    x: x,\n                    y: y\n                }, {\n                    x: 0,\n                    y: this.height\n                }), ElementRect.euclideanDistance({\n                    x: x,\n                    y: y\n                }, {\n                    x: this.width,\n                    y: this.height\n                }));\n            }\n        }, {\n            key: 'contains',\n            value: function contains(_ref2) {\n                var x = _ref2.x;\n                var y = _ref2.y;\n                var clientX = _ref2.clientX;\n                var clientY = _ref2.clientY;\n\n                var l = this.boundingRect.left,\n                    t = this.boundingRect.top,\n                    w = this.boundingRect.width,\n                    h = this.boundingRect.height,\n                    _x = x || clientX || 0,\n                    _y = y || clientY || 0;\n\n                return _x >= l && _x <= l + w && _y >= t && _y <= t + h;\n            }\n        }, {\n            key: 'center',\n            get: function get() {\n                return {\n                    x: this.width / 2,\n                    y: this.height / 2\n                };\n            }\n        }, {\n            key: 'boundingRect',\n            get: function get() {\n                return this._element.getBoundingClientRect();\n            }\n        }], [{\n            key: 'euclideanDistance',\n            value: function euclideanDistance(point1, point2) {\n                return Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\n            }\n        }]);\n\n        return ElementRect;\n    })();\n\n    var _window = window || undefined,\n        _doc = _window.document,\n        _now = (function () {\n        return _window.performance && _window.performance.now ? _window.performance.now.bind(_window.performance) : Date.now;\n    })();\n\n    var PaperWave = (function () {\n        function PaperWave(_ref3) {\n            var $ = _ref3.$;\n            var _ref3$recenters = _ref3.recenters;\n            var recenters = _ref3$recenters === undefined ? false : _ref3$recenters;\n            var _ref3$center = _ref3.center;\n            var center = _ref3$center === undefined ? false : _ref3$center;\n            var _ref3$initialOpacity = _ref3.initialOpacity;\n            var initialOpacity = _ref3$initialOpacity === undefined ? 0.25 : _ref3$initialOpacity;\n            var _ref3$opacityDecayVel = _ref3.opacityDecayVelocity;\n            var opacityDecayVelocity = _ref3$opacityDecayVel === undefined ? 0.8 : _ref3$opacityDecayVel;\n\n            _classCallCheck(this, PaperWave);\n\n            this.color = _window.getComputedStyle($).color;\n            this.containerRect = new ElementRect($);\n            this.recenters = recenters;\n            this.center = center;\n            this.initialOpacity = initialOpacity;\n            this.opacityDecayVelocity = opacityDecayVelocity;\n            this.$wave = _doc.createElement('div');\n            this.$wave.classList.add('paper-ripple__wave');\n            this.$wave.style.backgroundColor = this.color;\n            this.$ = _doc.createElement('div');\n            this.$.classList.add('paper-ripple__wave-container');\n            this.$.appendChild(this.$wave);\n            this.resetDefaults();\n            return this;\n        }\n\n        _createClass(PaperWave, [{\n            key: 'resetDefaults',\n            value: function resetDefaults() {\n                this.maxRadius = 0;\n                this.touchDownStarted = 0;\n                this.touchUpStarted = 0;\n                this.startPosition = {\n                    x: 0,\n                    y: 0\n                };\n                this.endPosition = {\n                    x: 0,\n                    y: 0\n                };\n                return this;\n            }\n        }, {\n            key: 'draw',\n            value: function draw() {\n                var cssString = undefined,\n                    scaleFactor = this.radius / (this.containerRect.size / 2),\n                    containerCenter = this.containerRect.center,\n                    currentPos = this.currentPosition,\n                    deltaPos = {\n                    x: currentPos.x - containerCenter.x,\n                    y: currentPos.y - containerCenter.y\n                };\n                this.$wave.style.opacity = this.opacity;\n                cssString = 'translate(' + deltaPos.x + 'px, ' + deltaPos.y + 'px)';\n                this.$.style.webkitTransform = cssString;\n                this.$.style.mozTransform = cssString;\n                this.$.style.msTransform = cssString;\n                this.$.style.oTransform = cssString;\n                this.$.style.transform = 'translate3d(' + deltaPos.x + 'px, ' + deltaPos.y + 'px, 0)';\n                cssString = 'scale(' + scaleFactor + ',' + scaleFactor + ')';\n                this.$wave.style.webkitTransform = cssString;\n                this.$wave.style.mozTransform = cssString;\n                this.$wave.style.msTransform = cssString;\n                this.$wave.style.oTransform = cssString;\n                this.$wave.style.transform = 'scale3d(' + scaleFactor + ',' + scaleFactor + ', 1)';\n                return this;\n            }\n        }, {\n            key: 'downAction',\n            value: function downAction() {\n                var event = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n                var containerCenter = this.containerRect.center;\n                this.resetDefaults();\n                this.touchDownStarted = _now();\n                this.startPosition = this.center || !event ? containerCenter : {\n                    x: (event.clientX || event.x) - this.containerRect.boundingRect.left,\n                    y: (event.clientY || event.y) - this.containerRect.boundingRect.top\n                };\n                this.endPosition = this.recenters ? containerCenter : this.endPosition;\n                this.maxRadius = this.containerRect.distanceToFarthestCorner(this.startPosition);\n                this.$.style.top = (this.containerRect.height - this.containerRect.size) / 2 + 'px';\n                this.$.style.left = (this.containerRect.width - this.containerRect.size) / 2 + 'px';\n                this.$.style.width = this.containerRect.size + 'px';\n                this.$.style.height = this.containerRect.size + 'px';\n                return this;\n            }\n        }, {\n            key: 'upAction',\n            value: function upAction() {\n                if (!this.isTouchDown) {\n                    return this;\n                }\n\n                this.touchUpStarted = _now();\n                return this;\n            }\n        }, {\n            key: 'remove',\n            value: function remove() {\n                this.$.parentNode.removeChild(this.$);\n                return this;\n            }\n        }, {\n            key: 'touchDownElapsed',\n            get: function get() {\n                var elapsed;\n\n                if (!this.touchDownStarted) {\n                    return 0;\n                }\n\n                elapsed = _now() - this.touchDownStarted;\n\n                if (this.touchUpStarted) {\n                    elapsed -= this.touchUpElapsed;\n                }\n\n                return elapsed;\n            }\n        }, {\n            key: 'touchUpElapsed',\n            get: function get() {\n                return this.touchUpStarted ? _now() - this.touchUpStarted : 0;\n            }\n        }, {\n            key: 'touchDownElapsedSeconds',\n            get: function get() {\n                return this.touchDownElapsed / 1000;\n            }\n        }, {\n            key: 'touchUpElapsedSeconds',\n            get: function get() {\n                return this.touchUpElapsed / 1000;\n            }\n        }, {\n            key: 'mouseInteractionSeconds',\n            get: function get() {\n                return this.touchDownElapsedSeconds + this.touchUpElapsedSeconds;\n            }\n        }, {\n            key: 'radius',\n            get: function get() {\n                var radius = Math.min(Math.sqrt(Math.pow(this.containerRect.width, 2) + Math.pow(this.containerRect.height, 2)), PaperWave.MAX_RADIUS) * 1.1 + 5,\n                    elapsed = 1.1 - 0.2 * (radius / PaperWave.MAX_RADIUS),\n                    currentTime = this.mouseInteractionSeconds / elapsed,\n                    actualRadius = radius * (1 - Math.pow(80, -currentTime));\n                return Math.abs(actualRadius);\n            }\n        }, {\n            key: 'opacity',\n            get: function get() {\n                if (!this.touchUpStarted) {\n                    return this.initialOpacity;\n                }\n\n                return Math.max(0, this.initialOpacity - this.touchUpElapsedSeconds * this.opacityDecayVelocity);\n            }\n        }, {\n            key: 'outerOpacity',\n            get: function get() {\n                return Math.max(0, Math.min(this.touchUpElapsedSeconds * 0.3, this.opacity));\n            }\n        }, {\n            key: 'isWaveFullyOpaque',\n            get: function get() {\n                return this.opacity < 0.01 && this.radius >= Math.min(this.maxRadius, PaperWave.MAX_RADIUS);\n            }\n        }, {\n            key: 'isMaxRadiusReached',\n            get: function get() {\n                return this.opacity >= this.initialOpacity && this.radius >= Math.min(this.maxRadius, PaperWave.MAX_RADIUS);\n            }\n        }, {\n            key: 'isAnimationComplete',\n            get: function get() {\n                return this.touchUpStarted ? this.isWaveFullyOpaque : this.isMaxRadiusReached;\n            }\n        }, {\n            key: 'translationFraction',\n            get: function get() {\n                return Math.min(1, this.radius / this.containerRect.size * 2 / Math.sqrt(2));\n            }\n        }, {\n            key: 'currentPosition',\n            get: function get() {\n                var translateFraction = this.translationFraction,\n                    x = this.startPosition.x,\n                    y = this.startPosition.y;\n\n                if (this.endPosition.x) {\n                    x = this.startPosition.x + translateFraction * (this.endPosition.x - this.startPosition.x);\n                }\n\n                if (this.endPosition.y) {\n                    y = this.startPosition.y + translateFraction * (this.endPosition.y - this.startPosition.y);\n                }\n\n                return {\n                    x: x,\n                    y: y\n                };\n            }\n        }, {\n            key: 'isTouchDown',\n            get: function get() {\n                return this.touchDownStarted && !this.touchUpStarted;\n            }\n        }]);\n\n        return PaperWave;\n    })();\n\n    PaperWave.MAX_RADIUS = 300;\n\n    var PaperRipple = (function () {\n        function PaperRipple(cfg) {\n            _classCallCheck(this, PaperRipple);\n\n            var _ref4 = cfg || {};\n\n            var _ref4$initialOpacity = _ref4.initialOpacity;\n            var initialOpacity = _ref4$initialOpacity === undefined ? 0.25 : _ref4$initialOpacity;\n            var _ref4$opacityDecayVel = _ref4.opacityDecayVelocity;\n            var opacityDecayVelocity = _ref4$opacityDecayVel === undefined ? 0.8 : _ref4$opacityDecayVel;\n            var _ref4$recenters = _ref4.recenters;\n            var recenters = _ref4$recenters === undefined ? false : _ref4$recenters;\n            var _ref4$center = _ref4.center;\n            var center = _ref4$center === undefined ? false : _ref4$center;\n            var _ref4$round = _ref4.round;\n            var round = _ref4$round === undefined ? false : _ref4$round;\n            var _ref4$target = _ref4.target;\n            var target = _ref4$target === undefined ? null : _ref4$target;\n            this.initialOpacity = initialOpacity;\n            this.opacityDecayVelocity = opacityDecayVelocity;\n            this._waves = [];\n\n            this._initTarget(cfg && cfg.nodeType ? cfg : target && target.nodeType ? target : null);\n\n            this.recenters = recenters || this.recenters;\n            this.center = center || this.center;\n            this.round = round || this.round;\n            return this;\n        }\n\n        _createClass(PaperRipple, [{\n            key: '_initTarget',\n            value: function _initTarget() {\n                var target = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\n                var _doc = _doc || window.document;\n\n                if (!this.$) {\n                    this.$ = target || _doc.createElement('div');\n                    this.$.classList.add('paper-ripple');\n                }\n\n                if (!this.$background) {\n                    this.$background = target && target.querySelector('.paper-ripple__background') || _doc.createElement('div');\n                    this.$background.classList.add('paper-ripple__background');\n                    this.$.appendChild(this.$background);\n                }\n\n                if (!this.$waves) {\n                    this.$waves = target && target.querySelector('.paper-ripple__waves') || _doc.createElement('div');\n                    this.$waves.classList.add('paper-ripple__waves');\n                    this.$.appendChild(this.$waves);\n                }\n\n                return this;\n            }\n        }, {\n            key: 'addWave',\n            value: function addWave() {\n                var wave = new PaperWave(this);\n                this.$waves.appendChild(wave.$);\n                this.$background.style.backgroundColor = wave.color;\n\n                this._waves.push(wave);\n\n                return wave;\n            }\n        }, {\n            key: 'downAction',\n            value: function downAction(ev) {\n                var wave = this.addWave();\n                wave.downAction(ev);\n                this.animate();\n                return this;\n            }\n        }, {\n            key: 'upAction',\n            value: function upAction() {\n                this._waves.forEach(function (wave) {\n                    wave.upAction();\n                });\n\n                this.animate();\n                return this;\n            }\n        }, {\n            key: 'removeWave',\n            value: function removeWave(wave) {\n                var waveIndex = this._waves.indexOf(wave);\n\n                if (waveIndex < 0) {\n                    return this;\n                }\n\n                this._waves.splice(waveIndex, 1);\n\n                wave.remove();\n                return this;\n            }\n        }, {\n            key: 'animate',\n            value: function animate() {\n                var i = undefined,\n                    l = undefined,\n                    wave = undefined;\n\n                for (i = 0, l = this._waves.length; i < l; i++) {\n                    wave = this._waves[i];\n\n                    if (wave) {\n                        wave.draw();\n                        this.$background.style.opacity = wave.outerOpacity;\n\n                        if (wave.isWaveFullyOpaque && !wave.isMaxRadiusReached) {\n                            this.removeWave(wave);\n                        }\n                    }\n                }\n\n                if (!this.shouldKeepAnimating && this._waves.length === 0) {\n                    this.$background.style.backgroundColor = null;\n                } else {\n                    window.requestAnimationFrame(this.animate.bind(this));\n                }\n\n                return this;\n            }\n        }, {\n            key: 'recenters',\n            get: function get() {\n                return this.$.hasAttribute('recenters');\n            },\n            set: function set(newValue) {\n                this.$[newValue ? 'setAttribute' : 'removeAttribute']('recenters', '');\n            }\n        }, {\n            key: 'center',\n            get: function get() {\n                return this.$.hasAttribute('center');\n            },\n            set: function set(newValue) {\n                this.$[newValue ? 'setAttribute' : 'removeAttribute']('center', '');\n            }\n        }, {\n            key: 'round',\n            get: function get() {\n                return this.$.classList.contains('paper-ripple--round');\n            },\n            set: function set(newValue) {\n                this.$.classList.toggle('paper-ripple--round', newValue);\n            }\n        }, {\n            key: 'shouldKeepAnimating',\n            get: function get() {\n                return this._waves.some(function (wave) {\n                    return !wave.isAnimationComplete;\n                });\n            }\n        }]);\n\n        return PaperRipple;\n    })();\n\n    module.exports = PaperRipple;\n});\n//# sourceMappingURL=PaperRipple.js.map\n"],"sourceRoot":"/source/"}